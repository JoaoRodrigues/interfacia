     1 0.150E+01 0.500E+00
     2 0.125E+01 0.750E+00
     3 0.112E+01 0.875E+00
     4 0.106E+01 0.938E+00
     5 0.103E+01 0.969E+00
     6 0.102E+01 0.984E+00
     7 0.101E+01 0.992E+00
     8 0.100E+01 0.996E+00
     9 0.100E+01 0.998E+00
    10 0.100E+01 0.999E+00
    11 0.100E+01 0.100E+01
    12 0.100E+01 0.100E+01
    13 0.100E+01 0.100E+01
    14 0.100E+01 0.100E+01
    15 0.100E+01 0.100E+01
    16 0.100E+01 0.100E+01
    17 0.100E+01 0.100E+01
    18 0.100E+01 0.100E+01
    19 0.100E+01 0.100E+01
    20 0.100E+01 0.100E+01
    21 0.100E+01 0.100E+01
    22 0.100E+01 0.100E+01
    23 0.100E+01 0.100E+01
    24 0.100E+01 0.100E+01
    25 0.100E+01 0.100E+01
    26 0.100E+01 0.100E+01
    27 0.100E+01 0.100E+01
    28 0.100E+01 0.100E+01
    29 0.100E+01 0.100E+01
    30 0.100E+01 0.100E+01
    31 0.100E+01 0.100E+01
    32 0.100E+01 0.100E+01
    33 0.100E+01 0.100E+01
    34 0.100E+01 0.100E+01
    35 0.100E+01 0.100E+01
    36 0.100E+01 0.100E+01
    37 0.100E+01 0.100E+01
    38 0.100E+01 0.100E+01
    39 0.100E+01 0.100E+01
    40 0.100E+01 0.100E+01
    41 0.100E+01 0.100E+01
    42 0.100E+01 0.100E+01
    43 0.100E+01 0.100E+01
    44 0.100E+01 0.100E+01
    45 0.100E+01 0.100E+01
    46 0.100E+01 0.100E+01
    47 0.100E+01 0.100E+01
    48 0.100E+01 0.100E+01
    49 0.100E+01 0.100E+01
    50 0.100E+01 0.100E+01
    51 0.100E+01 0.100E+01
    52 0.100E+01 0.100E+01
    53 0.100E+01 0.100E+01
          ============================================================
          |                                                          |
          |            Crystallography & NMR System (CNS)            |
          |                         CNSsolve                         |
          |                                                          |
          ============================================================
           Version: 1.3 at patch level U
           Status: Special UU release with Rg and paramagnetic
                   restraints (A. Bonvin, UU 2011)
          ============================================================
           Written by: A.T.Brunger, P.D.Adams, G.M.Clore, W.L.DeLano,
                       P.Gros, R.W.Grosse-Kunstleve,J.-S.Jiang,J.M.Krahn,
                       J.Kuszewski, M.Nilges, N.S.Pannu, R.J.Read,
                       L.M.Rice, G.F.Schroeder, T.Simonson, G.L.Warren.
           Copyright (c) 1997-2010 Yale University
          ============================================================
           Running on machine: hostname unknown (Mac/Intel,64-bit)
           Program started by: joao
           Program started at: 13:08:43 on 15-Jan-2016
          ============================================================

 FFT3C: Using FFTPACK4.1

 CNSsolve>! 
 CNSsolve>! Calculates pairwise residue-residue energies at the interface. 
 CNSsolve>! Does *NOT* rebuild or minimize the structure. Use only for HADDOCK models. 
 CNSsolve>! Adapted from HADDOCK protocols here and there. 
 CNSsolve>! JR @ 2015 
 CNSsolve>! 
 CNSsolve> 
 CNSsolve>evaluate ($coorfile = "molecule.pdb") 
 EVALUATE: symbol $COORFILE set to "molecule.pdb" (string)
 CNSsolve>evaluate ($interface_dist_cutoff = 5.0) 
 EVALUATE: symbol $INTERFACE_DIST_CUTOFF set to    5.00000     (real)
 CNSsolve> 
 CNSsolve>! Mute (most) output 
 CNSsolve>set message=off echo=off end 
 PARRDR>    @@toppar/ligand.param 
 %PARRDR-info: duplication of bond HC   NC2 
 %PARRDR-info: duplication of angle CH2P CH2E HA  
 CNSsolve> 
 CNSsolve>parameter 
 PARRDR>  nbonds 
 NBDSET>    nbxmod=5 atom cdie shift 
 NBDSET>    cutnb=9.5 ctofnb=8.5 ctonnb=6.5 eps=1.0 e14fac=0.4 inhibit 0.25 
 NBDSET>    wmin=0.5 tolerance  0.5 
 NBDSET>  end 
 PARRDR>end 
 %PARRDR-info: duplication of bond HC   NC2 
 %PARRDR-info: duplication of angle CH2P CH2E HA  
 CNSsolve> 
 CNSsolve>topology 
 RTFRDR>    @@toppar/protein-allhdg5-4.top 
 RTFRDR>remarks file toppar/protein-allhdg5-4.top 
 RTFRDR>remarks 
 RTFRDR>remarks   file topallhdg.pro  version 5.4  date 07-July-10 
 RTFRDR>remarks      for file parallhdg.pro version 5.4 date 07-July-10 or later 
 RTFRDR>remarks   Geometric energy function parameters for distance geometry and 
 RTFRDR>remarks      simulated annealing. 
 RTFRDR>remarks   Author: Michael Nilges, EMBL Heidelberg; Institut Pasteur, Paris 
 RTFRDR>remarks   This file contains modifications from M. Williams, UCL London 
 RTFRDR>remarks   and multiple modifications for HADDOCK from A. Bonvin, Utrecht University 
 RTFRDR>remarks   Last modification 10-01-2012 
 RTFRDR> 
 RTFRDR>set message ? end eval ($old_message=$result) set echo ? end eval ($old_echo=$result) 
 RTFRDR>set message=off echo=off end 
 RTFRDR> 
 RTFRDR>    @@toppar/protein_break.top 
 RTFRDR>remarks file toppar/protein_break.top 
 RTFRDR>remarks   patches to remove peptide linkages 
 RTFRDR> 
 RTFRDR>! Paul Adams 28th June 1999 
 RTFRDR>! Yale University 
 RTFRDR> 
 RTFRDR>set echo=false end 
 %RTFRDR-ERR: duplicate (P-)RESIdue name DPEP
 %RTFRDR-ERR: duplicate (P-)RESIdue name DPPP
 RTFRDR> 
 RTFRDR>    @@toppar/ion.top 
 RTFRDR>remarks file toppar/ion.top 
 RTFRDR>remarks topology and masses for common ions 
 RTFRDR>remarks Dingle atom ion residues are given the name of the element. 
 RTFRDR>remarks By default the atom will be uncharged (eg. the residue MG will 
 RTFRDR>remarks contain the atom called MG with zero charge). 
 RTFRDR>remarks To use the charged species the charge state is appended to 
 RTFRDR>remarks the atom name (eg to use MG2+ the residue name is MG2, and the 
 RTFRDR>remarks atom name is MG+2 and has charge +2.0). 
 RTFRDR>remarks NOTE: not all ionic species are represented 
 RTFRDR>remarks PDA 02/09/99 
 RTFRDR> 
 RTFRDR>set echo=false end 
 RTFRDR>    @@toppar/ligand.top 
 CNSsolve> 
 CNSsolve>! 
 CNSsolve>! Read coordinates and calculate energies 
 CNSsolve>! 
 CNSsolve> 
 CNSsolve>segment 
 SEGMENT>  chain 
 CHAIN>    separate=true 
 CHAIN>    @@toppar/protein-allhdg5-4.link 
 CHAIN>remarks file toppar/protein-allhdg5-4.link 
 CHAIN>remarks 
 CHAIN>remarks this is a macro to define standard protein peptide bonds 
 CHAIN>remarks and termini to generate a protein sequence. 
 CHAIN> 
 CHAIN>!added links for MSE (8-19-2011, ATB) 
 CHAIN> 
 CHAIN>set message ? end eval ($old_message=$result) set echo ? end eval ($old_echo=$result) 
 CHAIN>set message=off echo=off end 
 CHAIN> 
 CHAIN>    coordinates @@$coorfile 
 COOR>REMARK DATE:23-Mar-2015  03:33:04       created by user: abonvin 
 COOR>REMARK VERSION:1.3U 
 COOR>ATOM      1  CB  THR    19     -10.219  20.586  -2.229  1.00 10.00      A 
 CHAIN>  end 
 SEGMENT>end 
 CNSsolve> 
 CNSsolve>coordinates @@$coorfile 
 COOR>REMARK DATE:23-Mar-2015  03:33:04       created by user: abonvin 
 COOR>REMARK VERSION:1.3U 
 COOR>ATOM      1  CB  THR    19     -10.219  20.586  -2.229  1.00 10.00      A 
 COOR>ATOM      2  OG1 THR    19     -10.781  19.416  -1.614  1.00 10.00      A 
 CNSsolve>delete sele=(hydrogen and attr charge = 0) end 
 CNSsolve>delete sele=(not known) ! Remove e.g. undefined HIS prot. states 
 DELETE>! 
 DELETE>! Set energy flags 
 DELETE>! 
 DELETE>flags 
 %DELETE-ERR: unrecognized command:
 flags 
 ^^^^^
 DELETE>    exclude * 
 %DELETE-ERR: unrecognized command:
     exclude 
     ^^^^^^^
 %DELETE-ERR: unrecognized command:
     exclude * 
             ^
 DELETE>    include vdw elec 
 %DELETE-ERR: unrecognized command:
     include 
     ^^^^^^^
 %DELETE-ERR: unrecognized command:
     include vdw 
             ^^^
 %DELETE-ERR: unrecognized command:
     include vdw elec 
                 ^^^^
 DELETE>end 
 CNSsolve> 
 CNSsolve>! 
 CNSsolve>! Get interfacial residues of chain A (receptor) 
 CNSsolve>! Assume chains A & B 
 CNSsolve>! 
 CNSsolve>do (store1 = 1) (byres (segid A and 
 SELRPN>                        (not segid A) around $interface_dist_cutoff)) 
 CNSsolve> 
 CNSsolve>evaluate ($buffer_file = $coorfile - ".pdb" + ".pwr_ene") 
 CNSsolve>buffer energies to=file=$buffer_file end 
 CNSsolve>buffer energies 
 BUFFER>    display ## Pairwise Interface Residue-Residue Energies ($coorfile) 
 BUFFER>end 
 CNSsolve> 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       88 intra-atom interactions
 --------------- cycle=     1 --------------------------------------------------
 | Etotal =1.317      grad(E)=0.045      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.146     E(ELEC)=1.463      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       57 intra-atom interactions
 --------------- cycle=     2 --------------------------------------------------
 | Etotal =-0.626     grad(E)=0.014      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.742     E(ELEC)=0.116      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      115 intra-atom interactions
 --------------- cycle=     3 --------------------------------------------------
 | Etotal =-0.771     grad(E)=0.058      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.310     E(ELEC)=0.539      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       48 intra-atom interactions
 --------------- cycle=     4 --------------------------------------------------
 | Etotal =-0.010     grad(E)=0.053      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.205     E(ELEC)=0.195      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       64 intra-atom interactions
 --------------- cycle=     5 --------------------------------------------------
 | Etotal =-0.570     grad(E)=0.004      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.570     E(ELEC)=0.000      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       54 intra-atom interactions
 --------------- cycle=     6 --------------------------------------------------
 | Etotal =2.182      grad(E)=0.174      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=0.504      E(ELEC)=1.678      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       87 intra-atom interactions
 --------------- cycle=     7 --------------------------------------------------
 | Etotal =-0.826     grad(E)=0.021      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.834     E(ELEC)=0.008      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       98 intra-atom interactions
 --------------- cycle=     8 --------------------------------------------------
 | Etotal =-1.710     grad(E)=0.036      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.347     E(ELEC)=-0.363     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       40 intra-atom interactions
 --------------- cycle=     9 --------------------------------------------------
 | Etotal =-0.575     grad(E)=0.017      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.341     E(ELEC)=-0.234     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       47 intra-atom interactions
 --------------- cycle=    10 --------------------------------------------------
 | Etotal =-0.589     grad(E)=0.017      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.557     E(ELEC)=-0.032     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       48 intra-atom interactions
 --------------- cycle=    11 --------------------------------------------------
 | Etotal =0.499      grad(E)=0.106      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=0.006      E(ELEC)=0.492      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       70 intra-atom interactions
 --------------- cycle=    12 --------------------------------------------------
 | Etotal =-1.438     grad(E)=0.131      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.395     E(ELEC)=-1.043     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       53 intra-atom interactions
 --------------- cycle=    13 --------------------------------------------------
 | Etotal =0.107      grad(E)=0.023      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.286     E(ELEC)=0.393      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       33 intra-atom interactions
 --------------- cycle=    14 --------------------------------------------------
 | Etotal =-0.554     grad(E)=0.012      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.345     E(ELEC)=-0.209     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       45 intra-atom interactions
 --------------- cycle=    15 --------------------------------------------------
 | Etotal =-0.192     grad(E)=0.002      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.192     E(ELEC)=0.000      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       51 intra-atom interactions
 --------------- cycle=    16 --------------------------------------------------
 | Etotal =-1.812     grad(E)=0.038      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.788     E(ELEC)=-1.024     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       45 intra-atom interactions
 --------------- cycle=    17 --------------------------------------------------
 | Etotal =-0.090     grad(E)=0.096      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.166     E(ELEC)=1.076      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       80 intra-atom interactions
 --------------- cycle=    18 --------------------------------------------------
 | Etotal =-0.023     grad(E)=0.018      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.346     E(ELEC)=0.323      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      107 intra-atom interactions
 --------------- cycle=    19 --------------------------------------------------
 | Etotal =-4.648     grad(E)=0.084      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.961     E(ELEC)=-3.687     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      117 intra-atom interactions
 --------------- cycle=    20 --------------------------------------------------
 | Etotal =-3.856     grad(E)=0.162      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-2.234     E(ELEC)=-1.623     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       98 intra-atom interactions
 --------------- cycle=    21 --------------------------------------------------
 | Etotal =-2.716     grad(E)=0.151      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.331     E(ELEC)=-1.385     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       52 intra-atom interactions
 --------------- cycle=    22 --------------------------------------------------
 | Etotal =1.317      grad(E)=0.153      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.714     E(ELEC)=2.032      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       44 intra-atom interactions
 --------------- cycle=    23 --------------------------------------------------
 | Etotal =-0.280     grad(E)=0.005      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.256     E(ELEC)=-0.024     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       96 intra-atom interactions
 --------------- cycle=    24 --------------------------------------------------
 | Etotal =-1.333     grad(E)=0.015      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.349     E(ELEC)=0.016      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       86 intra-atom interactions
 --------------- cycle=    25 --------------------------------------------------
 | Etotal =-1.450     grad(E)=0.054      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.330     E(ELEC)=-0.120     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      110 intra-atom interactions
 --------------- cycle=    26 --------------------------------------------------
 | Etotal =-1.174     grad(E)=0.032      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.274     E(ELEC)=0.101      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       50 intra-atom interactions
 --------------- cycle=    27 --------------------------------------------------
 | Etotal =-2.957     grad(E)=0.174      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.192     E(ELEC)=-2.765     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       89 intra-atom interactions
 --------------- cycle=    28 --------------------------------------------------
 | Etotal =11.322     grad(E)=0.186      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.370     E(ELEC)=11.691     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       89 intra-atom interactions
 --------------- cycle=    29 --------------------------------------------------
 | Etotal =7.396      grad(E)=0.254      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.544     E(ELEC)=7.940      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       44 intra-atom interactions
 --------------- cycle=    30 --------------------------------------------------
 | Etotal =-0.632     grad(E)=0.017      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.238     E(ELEC)=-0.394     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       93 intra-atom interactions
 --------------- cycle=    31 --------------------------------------------------
 | Etotal =-0.714     grad(E)=0.084      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.201     E(ELEC)=0.487      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       95 intra-atom interactions
 --------------- cycle=    32 --------------------------------------------------
 | Etotal =-4.774     grad(E)=0.104      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.435     E(ELEC)=-3.340     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       72 intra-atom interactions
 --------------- cycle=    33 --------------------------------------------------
 | Etotal =-1.156     grad(E)=0.045      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.359     E(ELEC)=-0.798     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       83 intra-atom interactions
 --------------- cycle=    34 --------------------------------------------------
 | Etotal =-1.398     grad(E)=0.029      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.410     E(ELEC)=0.011      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      108 intra-atom interactions
 --------------- cycle=    35 --------------------------------------------------
 | Etotal =-2.109     grad(E)=0.135      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.702     E(ELEC)=-0.407     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       46 intra-atom interactions
 --------------- cycle=    36 --------------------------------------------------
 | Etotal =-4.573     grad(E)=0.216      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.222     E(ELEC)=-4.352     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      120 intra-atom interactions
 --------------- cycle=    37 --------------------------------------------------
 | Etotal =-12.269    grad(E)=0.235      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-2.230     E(ELEC)=-10.039    |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       55 intra-atom interactions
 --------------- cycle=    38 --------------------------------------------------
 | Etotal =-1.750     grad(E)=0.130      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.166     E(ELEC)=-1.584     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       74 intra-atom interactions
 --------------- cycle=    39 --------------------------------------------------
 | Etotal =-0.688     grad(E)=0.014      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.515     E(ELEC)=-0.173     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       75 intra-atom interactions
 --------------- cycle=    40 --------------------------------------------------
 | Etotal =-0.046     grad(E)=0.100      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.046     E(ELEC)=0.000      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       80 intra-atom interactions
 --------------- cycle=    41 --------------------------------------------------
 | Etotal =-0.635     grad(E)=0.006      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.621     E(ELEC)=-0.014     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      119 intra-atom interactions
 --------------- cycle=    42 --------------------------------------------------
 | Etotal =-2.820     grad(E)=0.104      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.932     E(ELEC)=-0.889     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       90 intra-atom interactions
 --------------- cycle=    43 --------------------------------------------------
 | Etotal =-46.454    grad(E)=0.494      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.856     E(ELEC)=-45.598    |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found      122 intra-atom interactions
 --------------- cycle=    44 --------------------------------------------------
 | Etotal =-39.040    grad(E)=0.925      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=0.757      E(ELEC)=-39.798    |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       64 intra-atom interactions
 --------------- cycle=    45 --------------------------------------------------
 | Etotal =-7.855     grad(E)=0.223      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.325     E(ELEC)=-7.530     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       69 intra-atom interactions
 --------------- cycle=    46 --------------------------------------------------
 | Etotal =-10.611    grad(E)=0.189      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.219     E(ELEC)=-10.392    |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       88 intra-atom interactions
 --------------- cycle=    47 --------------------------------------------------
 | Etotal =1.089      grad(E)=0.068      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.537     E(ELEC)=2.626      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       46 intra-atom interactions
 --------------- cycle=    48 --------------------------------------------------
 | Etotal =-0.402     grad(E)=0.025      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.357     E(ELEC)=-0.044     |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       72 intra-atom interactions
 --------------- cycle=    49 --------------------------------------------------
 | Etotal =-1.220     grad(E)=0.102      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-2.009     E(ELEC)=0.790      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       94 intra-atom interactions
 --------------- cycle=    50 --------------------------------------------------
 | Etotal =-0.722     grad(E)=0.070      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-1.566     E(ELEC)=0.844      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       77 intra-atom interactions
 --------------- cycle=    51 --------------------------------------------------
 | Etotal =-0.072     grad(E)=0.045      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.147     E(ELEC)=0.074      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       43 intra-atom interactions
 --------------- cycle=    52 --------------------------------------------------
 | Etotal =3.689      grad(E)=0.096      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.064     E(ELEC)=3.753      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       82 intra-atom interactions
 --------------- cycle=    53 --------------------------------------------------
 | Etotal =-89.227    grad(E)=0.880      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=2.660      E(ELEC)=-91.887    |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 NBONDS: generating intra-molecular exclusion list with mode= 5
 MAKINB: mode   5 found      0 exclusions and      0 interactions(1-4)
 NBONDS: found       40 intra-atom interactions
 --------------- cycle=    54 --------------------------------------------------
 | Etotal =7.033      grad(E)=0.130      E(BOND)=0.000      E(ANGL)=0.000      |
 | E(DIHE)=0.000      E(IMPR)=0.000      E(VDW )=-0.173     E(ELEC)=7.206      |
 -------------------------------------------------------------------------------
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 BUFFER>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 BUFFER>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve>for $id_a in id (attr store1 = 1 and tag) loop res_a 
 CNSsolve>    show (resid) (id $id_a) 
 CNSsolve>    evaluate ($resi_a = $result) 
 CNSsolve>    show (resn) (id $id_a) 
 CNSsolve>    evaluate ($resn_a = $result) 
 CNSsolve> 
 CNSsolve>    do (store2 = 0) (segid B) 
 CNSsolve>    for $id_b in id ( segid B and (segid A and resid $resi_a) around $interface_dist_cutoff ) loop res_b 
 CNSsolve>        show (resid) (id $id_b) 
 CNSsolve>        evaluate ($resi_b = $result) 
 CNSsolve>        show (resn) (id $id_b) 
 CNSsolve>        evaluate ($resn_b = $result) 
 CNSsolve> 
 CNSsolve>        ! Avoid multiple calcs per residue 
 CNSsolve>        identity (store3) (segid B and resid $resi_b and attribute store2 > 0) 
 CNSsolve>        if ( $select = 0 ) then 
 CNSsolve>            igroup interaction (segid A and resid $resi_a) (segid B and resid $resi_b) end 
 CNSsolve>            energy end 
 CNSsolve>            ! Calculate total energy as per HADDOCK scoring function 
 CNSsolve>            evaluate ($total = ($vdw + $elec)) 
 CNSsolve>            buffer energies 
 CNSsolve>                display # A $resi_a $resn_a <> B $resi_b $resn_b - vdW = $vdw elec = $elec total = $total 
 CNSsolve>            end 
 CNSsolve>            do (store2 = 1) (segid B and resid $resi_b) 
 CNSsolve>        end if 
 CNSsolve>    end loop res_b 
 CNSsolve> 
 CNSsolve>end loop res_a 
 CNSsolve> 
 CNSsolve>buffer energies dump end 
 CNSsolve> 
 CNSsolve>stop 
 HEAP: maximum use      =     9840752 current use      =       96000 bytes
 HEAP: maximum overhead =        1520 current overhead =         752 bytes
          ============================================================
           Maximum dynamic memory allocation:     9840752 bytes
           Maximum dynamic memory overhead:          1520 bytes
           Program started at: 13:08:43 on 15-Jan-2016
           Program stopped at: 13:08:45 on 15-Jan-2016
           CPU time used:       1.4685 seconds
          ============================================================
